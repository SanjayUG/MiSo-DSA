import java.util.*;

public class Solution {
    public static class Job {
        int id;
        int deadline;
        int profit;

        Job(int x, int y, int z) {
            this.id = x;
            this.deadline = y;
            this.profit = z;
        }
    }

    public static class JobComparator implements Comparator<Job> {
        public int compare(Job a, Job b) {
            return b.profit - a.profit;
        }
    }
    public static int[] jobScheduling(int [][]jobs) {
        int n = jobs.length;
        Job[] jobPair = new Job[n];
        for(int i=0; i<n; i++) {
            jobPair[i] = new Job(jobs[i][0], jobs[i][1], jobs[i][2]);
        }

        Arrays.sort(jobPair, new JobComparator());

        int jobProfit = 0;
        int countJob = 0;
        int maxDeadline = 0;

        //find maximum deadline job
        for(int i=0; i<n; i++) {
            if(jobPair[i].deadline > maxDeadline) {
                maxDeadline = jobPair[i].deadline;
            }
        }

        int[] result = new int[maxDeadline + 1];
        Arrays.fill(result, -1);

        for(int i=0; i<n; i++) {
            for(int j=jobPair[i].deadline; j>0; j--) {
                if(result[j] == -1) {
                    result[j] = i;
                    countJob++;
                    jobProfit += jobPair[i].profit;
                    break;
                }
            }
        }

        int[] ans = new int[2];
        ans[0] = countJob;
        ans[1] = jobProfit;

        return ans;
    }
}
