/****************************************************************

 Following is the class structure of the Node class:

 class Node {
     public int data;
     public Node next;
     public Node prev;

     Node()
     {
         this.data = 0;
         this.next = null;
         this.prev = null;
     }

     Node(int data)
     {
         this.data = data;
         this.next = null;
         this.prev = null;
     }

     Node(int data, Node next)
     {
         this.data = data;
         this.next = next;
         this.prev = next;
     }
 };

 *****************************************************************/

public class Solution
{
    public static Node removeKthNode(Node head, int K)
    {
        // Node temp = head;
        // Node tail = head;
        // int count = 0;

        // while(tail != null) {
        //     tail = tail.next;
        //     count++;
        // }

        // int diff = count - K;

        // if(diff == 0) {
        //     head = head.next;
        //     return head;
        // }

        // while(temp != null) {
        //     if(diff - 1 == 0) {
        //         break;                
        //     }
        //     temp = temp.next;
        //     diff--;
        // }
        // temp.next = temp.next.next;
        // return head;

        //Using fast and slow ptr
        Node fast = head;
        Node slow = head;

        while(K != 0) {
            fast = fast.next;
            K--;
        }

        if(fast == null) {
            return head.next;
        }

        while(fast.next != null) {
            slow = slow.next;
            fast = fast.next;
        }

        slow.next = slow.next.next;

        return head;

    }
}
