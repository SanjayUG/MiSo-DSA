/*
Problem statement
You are given a string ‘Str’ consisting of only characters ‘a’ and ‘b’. You can delete any number of characters in ‘Str’ to make ‘Str’ balanced.
A string is called balanced if there is no pair of indices (i, j) such that i < j, Str[i] = ’b’ and Str[j] = ’a’. You have to return the minimum number of deletions to make the ‘Str’ balanced.

For example:
Consider the string 'Str' = “aabbbab”, you can delete character ‘a’ at the 5th index to make the string balanced ("aabbbab" -> "aabbbb"). Hence, the answer is 1.


*/



public class Solution {

	public static int minDeletions(String str) {
		int n = str.length();
		int prefix = 0;
		int totalDeletion = 0;

		for(int i=0; i<n; i++) {
			if(str.charAt(i) == 'b') {
				prefix++;
			} else if(str.charAt(i) == 'a' && prefix > 0) {
				prefix--;
				totalDeletion++;
			}
		}

		return totalDeletion;
	}

}
