/*
Problem statement
You have been given two Strings “STR1” and “STR2” of characters. Your task is to find the length of the longest common subsequence.

A String ‘a’ is a subsequence of a String ‘b’ if ‘a’ can be obtained from ‘b’ by deletion of several (possibly, zero or all) characters. A common subsequence of two Strings is a subsequence that is common to both Strings.


*/



public class Solution {

	public static int lcs(String s, String t) {
		int dp[][] = new int[s.length() + 1][t.length() + 1];

		for(int i=1; i<=s.length(); i++) {
			for(int j=1; j<=t.length(); j++) {
				if(s.charAt(i - 1) == t.charAt(j - 1)) {
					dp[i][j] = 1 + dp[i - 1][j - 1];
				} else {
					dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
				}
			}
		}

		return dp[s.length()][t.length()];
    }

}
