
public class Solution {

    public static int editDistance(String str1, String str2) {
        int m = str1.length();
        int n = str2.length();

        int dp[][] = new int[m+1][n+1];

        //initlizeing
        for(int i=1; i<=m; i++) {
            dp[i][0] = i;
        }
        for(int j=1; j<=n; j++) {
            dp[0][j] = j;
        }

        // fill the cells
        for(int i=1; i<=m; i++) {
            for(int j=1; j<=n; j++) {
                if(str1.charAt(i - 1) == str2.charAt(j - 1)) { //same char
                    //copy from just left-top diagonal
                    dp[i][j] = dp[i - 1][j - 1];
                } else {
                    // min of top, left, left-top(diagonal) element
                    int left = dp[i][j - 1];
                    int top = dp[i - 1][j];
                    int leftTop = dp[i - 1][j - 1];
                    dp[i][j] = Math.min(leftTop, Math.min(left, top)) + 1;
                }             
            }
        }

        return dp[m][n];
    }
}
