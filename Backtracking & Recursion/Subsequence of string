/*
Problem statement
You are given a string 'STR' containing lowercase English letters from a to z inclusive. Your task is to find all non-empty possible subsequences of 'STR'.

A Subsequence of a string is the one which is generated by deleting 0 or more letters from the string and keeping the rest of the letters in the same order.


*/



import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

class Solution {
    public static ArrayList<String> subsequences(String s) {
        ArrayList<String> ans = new ArrayList<>();
        helper(s, 0, "", ans);
        return ans;
    }

    public static void helper(String s, int i, String temp, ArrayList<String> ans) {
        if(i == s.length()) {
            if(!temp.isEmpty()) {
                ans.add(temp);
            }
            return;
        }

        //take
        helper(s, i+1, temp+=s.charAt(i), ans);
        //not take
        helper(s, i+1, temp=temp.substring(0, temp.length()-1), ans);
    }
}
