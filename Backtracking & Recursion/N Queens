/*
Problem statement
You are given an integer 'N'. For a given 'N' x 'N' chessboard, find a way to place 'N' queens such that no queen can attack any other queen on the chessboard.

A queen can be killed when it lies in the same row, or same column, or the same diagonal of any of the other queens. You have to print all such configurations.


*/



import java.util.ArrayList;

public class Solution {
    public static ArrayList<ArrayList<Integer>> solveNQueens(int n) {
        int[][] board = new int[n][n];
        ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
        solve(board, ans, n, 0);
        return ans;
    }

    public static void solve(int[][] board, ArrayList<ArrayList<Integer>> ans, int n, int col) {
        if(col == n) {
            addToList(board, ans, n);
            return;
        }
        for(int row=0; row<n; ++row) {
            if(isPossible(row, col, board, n)) {
                board[row][col] = 1;
                solve(board, ans, n, col + 1);
                board[row][col] = 0;
            }
        }
    }

    public static boolean isPossible(int row, int col, int[][] board, int n) {
        
        /*
        1 1 1 1
        */
        int x = row;
        int y = col;
        while(y >= 0) {
            if(board[x][y] == 1) {
                return false;
            }
            y--;
        }


        /*
              1
            1
          1
        1
        */
        y = col;
        while(x >= 0 && y >= 0) {
            if(board[x][y] == 1) {
                return false;
            }
            x--;
            y--;
        }

        /*
        1
          1
            1
              1
        */
        x = row;
        y = col;
        while(x < n && y >= 0) {
            if(board[x][y] == 1) {
                return false;
            }
            x++;
            y--;
        }
        return true;
    }

    public static void addToList(int[][] board, ArrayList<ArrayList<Integer>> ans, int n) {
        ArrayList<Integer> temp = new ArrayList<>();
        for(int i=0; i<n; i++) {
            for(int j=0; j<n; j++) {
                temp.add(board[i][j]);
            }
        }
        ans.add(temp);
    }
}
