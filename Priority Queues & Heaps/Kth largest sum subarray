/*
Problem statement
Given an array of integers, find the Kth largest sum subarray For example, given the array [1, -2, 3, -4, 5] and K = 2, the 2nd largest sum subarray would be [3, -4, 5], which has a sum of 4.

Please note that a subarray is the sequence of consecutive elements of the array.


*/

import java.util.*;
public class Solution {

	public static int getKthLargest(ArrayList<Integer> arr, int k) {

		ArrayList<Integer> ans = new ArrayList<>();

        PriorityQueue<Integer> minHeap = new PriorityQueue<>();
        for(int i=0 ; i<arr.size() ; i++){
            int sum = 0;
            for(int j=i ; j<arr.size() ; j++){
				//accumulate the sum
                sum+= arr.get(j);
				//if size of minHeap is less than minHeap.add the sum
                if(minHeap.size()<k){
                    minHeap.add(sum);
                }else{ //if equals or greater 
					//update the sum in minHeap
                    if(minHeap.peek() < sum){
                        minHeap.poll();
                        minHeap.add(sum);
                    }
                }
            }
        }
        return minHeap.peek();
	}
}
