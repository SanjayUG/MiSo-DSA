/*
Problem statement
You are given an array/list (arr) representing a min-heap. Your task is to write a function that converts the min-heap to a max-heap.

 Note :
Change in the input array/list itself. You don't need to return or print the elements.


*/



public class Solution {
    public static void minHeapToMaxHeap(long[] arr) {
        int n = arr.length;
        // Start from the last internal node and heapify each node
        for (int i = (n / 2) - 1; i >= 0; i--) {
            maxHeapify(arr, n, i);
        }
    }

    public static void maxHeapify(long heap[], int n, int i) {
        int largest = i; // Initialize largest as root
        int left = 2 * i + 1; // left child
        int right = 2 * i + 2; // right child

        // If left child is larger than root
        if (left < n && heap[left] > heap[largest]) {
            largest = left;
        }

        // If right child is larger than largest so far
        if (right < n && heap[right] > heap[largest]) {
            largest = right;
        }

        // If largest is not root
        if (largest != i) {
            long temp = heap[i];
            heap[i] = heap[largest];
            heap[largest] = temp;

            // Recursively heapify the affected subtree
            maxHeapify(heap, n, largest);
        }
    }
}
