/*

Problem statement
You have been given 'N' ropes of different lengths, we need to connect these ropes into one rope. The cost to connect two ropes is equal to sum of their lengths. We need to connect the ropes with minimum cost.

The test-data is such that the result will fit into a 32-bit integer.

*/



import java.util.PriorityQueue;

public class Solution 
{
    public static long connectRopes(int[] arr)
    {
        PriorityQueue<Integer> minHeap = new PriorityQueue<>();
        for(int i=0; i<arr.length; i++) {
            minHeap.add(arr[i]);
        }

        int cost = 0;
        while(minHeap.size() > 1) {
            int first = minHeap.poll();
            int second = minHeap.poll();
            int sum = first + second;
            cost += sum;
            minHeap.add(sum);
        }
        return cost;
    }
}
