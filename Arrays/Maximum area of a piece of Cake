/*



*/



import java.util.Arrays;

class Solution {
    public int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
        Arrays.sort(horizontalCuts);
        Arrays.sort(verticalCuts);
        
        // Find the maximum gap between consecutive horizontal cuts
        int maxHorGap = Math.max(horizontalCuts[0], h - horizontalCuts[horizontalCuts.length - 1]);
        for (int i = 1; i < horizontalCuts.length; i++) {
            maxHorGap = Math.max(maxHorGap, horizontalCuts[i] - horizontalCuts[i - 1]);
        }
        
        // Find the maximum gap between consecutive vertical cuts
        int maxVerGap = Math.max(verticalCuts[0], w - verticalCuts[verticalCuts.length - 1]);
        for (int i = 1; i < verticalCuts.length; i++) {
            maxVerGap = Math.max(maxVerGap, verticalCuts[i] - verticalCuts[i - 1]);
        }
        
        // Calculate the maximum area and take it modulo 10^9 + 7
        long maxArea = (long) maxHorGap * maxVerGap;
        return (int) (maxArea % 1000000007);
    }
}
