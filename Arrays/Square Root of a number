/*
Problem statement
You are given a positive integer ‘n’.

Your task is to find and return its square root. If ‘n’ is not a perfect square, then return the floor value of sqrt(n).

Example:
Input: ‘n’ = 7

Output: 2

Explanation:
The square root of the number 7 lies between 2 and 3, so the floor value is 2.


*/



import java.util.* ;
import java.io.*; 

public class Solution {

	public static int sqrtN(long N) {
		long start = 0;
		long end = N;
		while(start <= end) {
			long mid = start + (end - start) / 2;
			if(mid * mid <= N) {
				start = mid + 1;
			} else {
				end = mid - 1;
			}
		}
		return (int)end;
	}
}
