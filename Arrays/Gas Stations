import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution {
	/*
	public static int firstCircularTour(ArrayList<Integer> petrol, ArrayList<Integer> distance, int n){
		

		long totalPetrol = 0;
		long totalDistance = 0;

		for(int i=0; i<n; i++) {
			totalPetrol += petrol.get(i);
			totalDistance += distance.get(i);
		}

		if(totalDistance > totalPetrol) {
			return -1;
		}

		long currPetrol = 0;
		long startDistance = 0;

		for(int i=0; i<n; i++) {
			currPetrol += petrol.get(i) - distance.get(i);

			if(currPetrol < 0) {
				currPetrol = 0;
				startDistance = i + 1;
			}
		}

		return (int)startDistance;
	}
	*/

	public static int firstCircularTour(ArrayList<Integer> petrol, ArrayList<Integer> distance, int n) {
        long totalPetrol = 0;
        long totalDistance = 0;
        long currPetrol = 0;
        int startIndex = 0;

        // Calculate the total petrol and distance, and find starting index
        for (int i = 0; i < n; i++) {
            totalPetrol += petrol.get(i);
            totalDistance += distance.get(i);
            currPetrol += petrol.get(i) - distance.get(i);

            // If currPetrol drops below 0, reset startIndex to the next station
            if (currPetrol < 0) {
                startIndex = i + 1;
                currPetrol = 0;
            }
        }

        // If the total distance is greater than total petrol, return -1
        if (totalDistance > totalPetrol) {
            return -1;
        }

        return startIndex;
    }
}
