/*
Problem statement
You have been given an integer array/list 'ARR' of size 'N'. Write a solution to check if it could become non-decreasing by modifying at most 1 element.

We define an array as non-decreasing, if ARR[i] <= ARR[i + 1] holds for every i (0-based) such that (0 <= i <= N - 2).


*/



import java.util.* ;
import java.io.*; 
public class Solution {
	public static boolean isPossible(int[] arr, int n) {
		// Write your code here.
        if (n < 2) {
            return true;
        }

        int count = 0;

        for (int i = 1; i < n; i++) {
            if (arr[i] < arr[i - 1]) {
                
                count++;

                if (count > 1) {
                    return false;
                }

                if(i != 1 && arr[i] < arr[i-2]){
                    arr[i] = arr[i-1];
                }
            }
        }

        return true;
	}
}
