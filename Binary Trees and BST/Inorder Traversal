/*
Problem statement
You have been given a Binary Tree of 'n' nodes, where the nodes have integer values. Your task is to return the In-Order traversal of the given binary tree.

For example :
For the given binary tree:

The Inorder traversal will be [5, 3, 2, 1, 7, 4, 6].


*/



/*
    Following is the TreeNode class structure:

    public class TreeNode {
        int data;
        TreeNode left;
        TreeNode right;
        TreeNode() {
            this.data = 0;
            this.left = null;
            this.right = null;
        }
        TreeNode(int val) {
            this.data = val;
            this.left = null;
            this.right = null;
        }
        TreeNode(int val, TreeNode left, TreeNode right) {
            this.data = val;
            this.left = left;
            this.right = right;
        }
    };
*/

import java.util.*;

public class Solution {
    public static List< Integer > getInOrderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        inorder(ans, root);
        return ans;
    }

    public static void inorder(List<Integer> ans, TreeNode root) {
        if(root == null) {
            return;
        }
        inorder(ans, root.left);
        ans.add(root.data);
        inorder(ans, root.right);
    }
}
