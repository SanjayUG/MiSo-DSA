/**********************************************************
	Following is the Binary Tree Node class.

	class BinaryTreeNode<T> {
	    T data;
	    BinaryTreeNode<T> left;
	    BinaryTreeNode<T> right;

	    public BinaryTreeNode(T data) {
		this.data = data;
	    }
	}
	
***********************************************************/
import java.util.*;
public class Solution {
    public static BinaryTreeNode<Integer> lcaOfThreeNodes(BinaryTreeNode<Integer> root, int node1, int node2,
            int node3) {
        if(root == null) {
			return null;
		}

		//if any root.data is the nodes then return it
		if(root.data == node1 || root.data == node2 || root.data == node3) {
			return root;
		}

		//call left and right recussively
		BinaryTreeNode left = lcaOfThreeNodes(root.left, node1, node2, node3);
		BinaryTreeNode right = lcaOfThreeNodes(root.right, node1, node2, node3);

		if(left == null) {
			return right;
		}
		if(right == null) {
			return left;
		}
		return root;
    }
}
